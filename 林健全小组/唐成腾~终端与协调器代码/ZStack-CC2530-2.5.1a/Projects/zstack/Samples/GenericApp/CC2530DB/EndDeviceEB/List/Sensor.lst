###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         29/Apr/2017  12:04:45 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\Source\Sensor.c                #
#    Command line       =  -f D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\Tools\CC2 #
#                          530DB\f8wEndev.cfg (-DCPU32MHZ -DROOT=__near_func  #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f D:\ZigBeecode\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\CC2530D #
#                          B\..\..\..\Tools\CC2530DB\f8wConfig.cfg            #
#                          (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0      #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0x0004                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\ZigBeecode\ZStack-CC2530 #
#                          -2.5.1a\Projects\zstack\Samples\GenericApp\Source\ #
#                          Sensor.c -D NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK   #
#                          -D MT_SYS_FUNC -D MT_ZDO_FUNC -D                   #
#                          LCD_SUPPORTED=DEBUG -D xPOWER_SAVING -lC           #
#                          D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\EndDeviceEB\List\     #
#                          -lA D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zs #
#                          tack\Samples\GenericApp\CC2530DB\EndDeviceEB\List\ #
#                           --diag_suppress Pe001,Pa010 -o                    #
#                          D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\EndDeviceEB\Obj\ -e   #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\ -I                #
#                          D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\..\Source\ -I         #
#                          D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\..\..\..\ZMain\TI2530 #
#                          DB\ -I D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects #
#                          \zstack\Samples\GenericApp\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\include\ -I                        #
#                          D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\hal\target\CC2530EB\ -I                       #
#                          D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\mac\include\ -I D:\ZigBeecode\ZStack-CC2530-2 #
#                          .5.1a\Projects\zstack\Samples\GenericApp\CC2530DB\ #
#                          ..\..\..\..\..\Components\mac\high_level\ -I       #
#                          D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\mac\low_level\srf04\ -I                       #
#                          D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\mac\low_level\srf04\single_chip\ -I           #
#                          D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\mt\ -I D:\ZigBeecode\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Samples\GenericApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\osal\include\ -I                  #
#                          D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\services\saddr\ -I D:\ZigBeecode\ZStack-CC253 #
#                          0-2.5.1a\Projects\zstack\Samples\GenericApp\CC2530 #
#                          DB\..\..\..\..\..\Components\services\sdata\ -I    #
#                          D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\stack\af\ -I D:\ZigBeecode\ZStack-CC2530-2.5. #
#                          1a\Projects\zstack\Samples\GenericApp\CC2530DB\..\ #
#                          ..\..\..\..\Components\stack\nwk\ -I               #
#                          D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\stack\sapi\ -I D:\ZigBeecode\ZStack-CC2530-2. #
#                          5.1a\Projects\zstack\Samples\GenericApp\CC2530DB\. #
#                          .\..\..\..\..\Components\stack\sec\ -I             #
#                          D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\stack\sys\ -I D:\ZigBeecode\ZStack-CC2530-2.5 #
#                          .1a\Projects\zstack\Samples\GenericApp\CC2530DB\.. #
#                          \..\..\..\..\Components\stack\zdo\ -I              #
#                          D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\ -I D:\ZigBeecode\ZStack-CC2530-2.5.1a\P #
#                          rojects\zstack\Samples\GenericApp\CC2530DB\..\..\. #
#                          .\..\..\Components\zmac\f8w\ -Ohz                  #
#                          --require_prototypes                               #
#    List file          =  D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\EndDeviceEB\List\Sens #
#                          or.lst                                             #
#    Object file        =  D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\EndDeviceEB\Obj\Senso #
#                          r.r51                                              #
#                                                                             #
#                                                                             #
###############################################################################

D:\ZigBeecode\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\GenericApp\Source\Sensor.c
      1          #include "Sensor.h"
      2          #include<ioCC2530.h>

   \                                 In  segment SFR_AN, at 0x88
   \   union <unnamed> volatile __sfr _A_TCON
   \                     _A_TCON:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xb6
   \   unsigned char volatile __sfr ADCCON3
   \                     ADCCON3:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xba
   \   unsigned char volatile __sfr ADCL
   \                     ADCL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xbb
   \   unsigned char volatile __sfr ADCH
   \                     ADCH:
   \   000000                DS 1
      3          
      4          #define ADC_REF_115V 0x00
      5          #define ADC_DEC_256 0x20
      6          #define ADC_CHN_TEMP 0x0e
      7          #define ADC_DEC_064 0x00
      8          #define ADC_CHN_VDD3 0x0f
      9          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     10          int8 readTemp(void)
   \                     readTemp:
     11          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
     12            static uint16 reference_voltage;
     13            static uint8 bCalibrate=TRUE;
     14            unsigned char tmpADCCON3=ADCCON3;
   \   000005   E5B6         MOV     A,0xb6
   \   000007   FC           MOV     R4,A
     15            uint16 value;
     16            int8 temp;
     17            
     18            ATEST=0x01;
   \   000008   9061BD       MOV     DPTR,#0x61bd
   \   00000B   7401         MOV     A,#0x1
   \   00000D   F0           MOVX    @DPTR,A
     19            TR0 |=0x01;
   \   00000E   90624B       MOV     DPTR,#0x624b
   \   000011   E0           MOVX    A,@DPTR
   \   000012   D2E0         SETB    0xE0 /* A   */.0
   \   000014   F0           MOVX    @DPTR,A
     20            ADCIF=0;
   \   000015   C28D         CLR     0x88.5
     21          ADCCON3=(ADC_REF_115V | ADC_DEC_256 | ADC_CHN_TEMP )  ;
   \   000017   75B62E       MOV     0xb6,#0x2e
     22          while(!ADCIF);
   \                     ??readTemp_0:
   \   00001A   A28D         MOV     C,0x88.5
   \   00001C   50FC         JNC     ??readTemp_0
     23          ADCIF=0;
   \   00001E   C28D         CLR     0x88.5
     24          value=ADCL;
   \   000020   E5BA         MOV     A,0xba
   \   000022   F5..         MOV     ?V0 + 0,A
     25          value |=((uint16)ADCH)<<8;
     26          value >>=4;
   \   000024   E5BB         MOV     A,0xbb
   \   000026   F5..         MOV     ?V0 + 1,A
   \   000028   7404         MOV     A,#0x4
   \   00002A   78..         MOV     R0,#?V0 + 0
   \   00002C   12....       LCALL   ?US_SHR
   \   00002F   AA..         MOV     R2,?V0 + 0
   \   000031   AB..         MOV     R3,?V0 + 1
     27          ADCCON3=tmpADCCON3;
   \   000033   8CB6         MOV     0xb6,R4
     28            if(bCalibrate)
   \   000035   90....       MOV     DPTR,#??bCalibrate
   \   000038   E0           MOVX    A,@DPTR
   \   000039   600D         JZ      ??readTemp_1
     29            {
     30              reference_voltage=value;
   \   00003B   90....       MOV     DPTR,#??reference_voltage
   \   00003E   EA           MOV     A,R2
   \   00003F   F0           MOVX    @DPTR,A
   \   000040   A3           INC     DPTR
   \   000041   EB           MOV     A,R3
   \   000042   F0           MOVX    @DPTR,A
     31              bCalibrate=FALSE;
   \   000043   90....       MOV     DPTR,#??bCalibrate
   \   000046   E4           CLR     A
   \   000047   F0           MOVX    @DPTR,A
     32            }
     33            temp=22+((value-reference_voltage)/4);
     34            return temp;
   \                     ??readTemp_1:
   \   000048   90....       MOV     DPTR,#??reference_voltage
   \   00004B   E0           MOVX    A,@DPTR
   \   00004C   F8           MOV     R0,A
   \   00004D   A3           INC     DPTR
   \   00004E   E0           MOVX    A,@DPTR
   \   00004F   F9           MOV     R1,A
   \   000050   EA           MOV     A,R2
   \   000051   C3           CLR     C
   \   000052   98           SUBB    A,R0
   \   000053   F5..         MOV     ?V0 + 0,A
   \   000055   EB           MOV     A,R3
   \   000056   99           SUBB    A,R1
   \   000057   F5..         MOV     ?V0 + 1,A
   \   000059   7402         MOV     A,#0x2
   \   00005B   78..         MOV     R0,#?V0 + 0
   \   00005D   12....       LCALL   ?US_SHR
   \   000060   E5..         MOV     A,?V0 + 0
   \   000062   2416         ADD     A,#0x16
   \   000064   F9           MOV     R1,A
   \   000065   7F02         MOV     R7,#0x2
   \   000067   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00006A                REQUIRE ADCCON3
   \   00006A                REQUIRE _A_TCON
   \   00006A                REQUIRE ADCL
   \   00006A                REQUIRE ADCH
     35          
     36          }

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??reference_voltage:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \                     ??bCalibrate:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for bCalibrate>`
   \   000001                REQUIRE __INIT_XDATA_I
     37          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     38          unsigned int getVddvalue(void)
   \                     getVddvalue:
     39          {
   \   000000                ; Saved register size: 2
   \   000000                ; Auto size: 0
     40            unsigned int value;
     41            unsigned char tmpADCCON3=ADCCON3;
   \   000000   E5B6         MOV     A,0xb6
   \   000002   F8           MOV     R0,A
     42            
     43            ADCIF=0;
   \   000003   C28D         CLR     0x88.5
     44            ADCCON3=(ADC_REF_115V | ADC_DEC_064 | ADC_CHN_VDD3);
   \   000005   75B60F       MOV     0xb6,#0xf
     45            while(!ADCIF);
   \                     ??getVddvalue_0:
   \   000008   A28D         MOV     C,0x88.5
   \   00000A   50FC         JNC     ??getVddvalue_0
     46            
     47            value=ADCH;
   \   00000C   E5BB         MOV     A,0xbb
     48            ADCCON3=tmpADCCON3;
   \   00000E   88B6         MOV     0xb6,R0
     49            
     50            return(value);
   \   000010   FA           MOV     R2,A
   \   000011   7B00         MOV     R3,#0x0
   \   000013   02....       LJMP    ?BRET
   \   000016                REQUIRE ADCCON3
   \   000016                REQUIRE _A_TCON
   \   000016                REQUIRE ADCH
     51          }

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for bCalibrate>`:
   \   000000   01           DB 1

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??readTemp?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    readTemp

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??getVddvalue?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    getVddvalue

   Maximum stack usage in bytes:

     Function    ISTACK PSTACK XSTACK
     --------    ------ ------ ------
     getVddvalue     2      0      0
     readTemp        0      0     10


   Segment part sizes:

     Function/Label                Bytes
     --------------                -----
     _A_TCON                          1
     ADCCON3                          1
     ADCL                             1
     ADCH                             1
     readTemp                       106
     reference_voltage                2
     bCalibrate                       1
     getVddvalue                     22
     ?<Initializer for bCalibrate>    1
     ??readTemp?relay                 6
     ??getVddvalue?relay              6

 
 128 bytes in segment BANKED_CODE
  12 bytes in segment BANK_RELAYS
   4 bytes in segment SFR_AN
   1 byte  in segment XDATA_I
   1 byte  in segment XDATA_ID
   2 bytes in segment XDATA_Z
 
 141 bytes of CODE  memory
   0 bytes of DATA  memory (+ 4 bytes shared)
   3 bytes of XDATA memory

Errors: none
Warnings: none
