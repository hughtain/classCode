###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         08/Jul/2017  22:31:51 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\Source\Zhonduana.c                        #
#    Command line       =  -f C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples #
#                          \GenericApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wEn #
#                          dev.cfg (-DCPU32MHZ -DROOT=__near_func             #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f C:\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Samples\GenericApp\CC2530DB\..\..\..\ #
#                          Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO          #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 C:\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Samples\GenericApp\Source\Zhonduana.c #
#                           -D NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D        #
#                          MT_SYS_FUNC -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG  #
#                          -D xPOWER_SAVING -D HAL_UART=TRUE -lC              #
#                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\CC2530DB\EndDeviceEB\List\ -lA            #
#                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\CC2530DB\EndDeviceEB\List\                #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\CC2530DB\EndDeviceEB\Obj\ -e              #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples #
#                          \GenericApp\CC2530DB\ -I                           #
#                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\CC2530DB\..\Source\ -I                    #
#                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\CC2530DB\..\..\..\ZMain\TI2530DB\ -I      #
#                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\CC2530DB\..\..\..\..\..\Components\hal\in #
#                          clude\ -I C:\ZStack-CC2530-2.5.1a\Projects\zstack\ #
#                          Samples\GenericApp\CC2530DB\..\..\..\..\..\Compone #
#                          nts\hal\target\CC2530EB\ -I                        #
#                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\CC2530DB\..\..\..\..\..\Components\mac\in #
#                          clude\ -I C:\ZStack-CC2530-2.5.1a\Projects\zstack\ #
#                          Samples\GenericApp\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mac\high_level\ -I C:\ZStack-CC2530-2.5.1a\Pro #
#                          jects\zstack\Samples\GenericApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\mac\low_level\srf04\ -I           #
#                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\CC2530DB\..\..\..\..\..\Components\mac\lo #
#                          w_level\srf04\single_chip\ -I                      #
#                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\CC2530DB\..\..\..\..\..\Components\mt\    #
#                          -I C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples #
#                          \GenericApp\CC2530DB\..\..\..\..\..\Components\osa #
#                          l\include\ -I C:\ZStack-CC2530-2.5.1a\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\Com #
#                          ponents\services\saddr\ -I                         #
#                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\CC2530DB\..\..\..\..\..\Components\servic #
#                          es\sdata\ -I C:\ZStack-CC2530-2.5.1a\Projects\zsta #
#                          ck\Samples\GenericApp\CC2530DB\..\..\..\..\..\Comp #
#                          onents\stack\af\ -I C:\ZStack-CC2530-2.5.1a\Projec #
#                          ts\zstack\Samples\GenericApp\CC2530DB\..\..\..\..\ #
#                          ..\Components\stack\nwk\ -I                        #
#                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\CC2530DB\..\..\..\..\..\Components\stack\ #
#                          sapi\ -I C:\ZStack-CC2530-2.5.1a\Projects\zstack\S #
#                          amples\GenericApp\CC2530DB\..\..\..\..\..\Componen #
#                          ts\stack\sec\ -I C:\ZStack-CC2530-2.5.1a\Projects\ #
#                          zstack\Samples\GenericApp\CC2530DB\..\..\..\..\..\ #
#                          Components\stack\sys\ -I                           #
#                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\CC2530DB\..\..\..\..\..\Components\stack\ #
#                          zdo\ -I C:\ZStack-CC2530-2.5.1a\Projects\zstack\Sa #
#                          mples\GenericApp\CC2530DB\..\..\..\..\..\Component #
#                          s\zmac\ -I C:\ZStack-CC2530-2.5.1a\Projects\zstack #
#                          \Samples\GenericApp\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -Ohz --require_prototypes           #
#    List file          =  C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\CC2530DB\EndDeviceEB\List\Zhonduana.lst   #
#    Object file        =  C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge #
#                          nericApp\CC2530DB\EndDeviceEB\Obj\Zhonduana.r51    #
#                                                                             #
#                                                                             #
###############################################################################

C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\GenericApp\Source\Zhonduana.c
      1          #include "OSAL.h"
      2          #include "AF.h"
      3          #include "ZDApp.h"
      4          #include "ZDObject.h"
      5          #include "ZDProfile.h"
      6          #include <string.h>
      7          #include "GenericApp.h"
      8          #include "DebugTrace.h"
      9          #if !defined( WIN32 )
     10          #include "OnBoard.h"
     11          #endif
     12          #include "hal_lcd.h"
     13          #include "hal_led.h"
     14          #include "hal_key.h"
     15          #include "hal_uart.h"
     16          #define SEND_DATA_EVENT 0x01
     17          
     18          //定义x，y坐标 真正用是要更改 根据不同终端 坐标不同
     19          #define X  0
     20          #define Y  0
     21          

   \                                 In  segment XDATA_ROM_C, align 1
     22          const cId_t GenericApp_ClusterListOutput[GENERICAPP_MAX_CLUSTERS] =
   \                     GenericApp_ClusterListOutput:
   \   000000   6F00         DW 111
     23          {
     24            
     25              LOCATION_XY_RSSI_RESPONSE
     26          };
     27          
     28          

   \                                 In  segment XDATA_ROM_C, align 1
     29          const cId_t GenericApp_ClusterListInput[GENERICAPP_MAX_CLUSTERS] =
   \                     GenericApp_ClusterListInput:
   \   000000   0B00         DW 11
     30          {
     31            
     32           
     33            LOCATION_RSSI_BLAST
     34          };

   \                                 In  segment XDATA_ROM_C, align 1
     35          const SimpleDescriptionFormat_t GenericApp_SimpleDesc =
   \                     GenericApp_SimpleDesc:
   \   000000   0A           DB 10
   \   000001   040F         DW 3844
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   01           DB 1
   \   000007   ....         DW GenericApp_ClusterListInput
   \   000009   01           DB 1
   \   00000A   ....         DW GenericApp_ClusterListOutput
     36          {
     37            GENERICAPP_ENDPOINT,              //  int Endpoint;
     38            GENERICAPP_PROFID,                //  uint16 AppProfId[2];
     39            GENERICAPP_DEVICEID,              //  uint16 AppDeviceId[2];
     40            GENERICAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
     41            GENERICAPP_FLAGS,                 //  int   AppFlags:4;
     42            GENERICAPP_MAX_CLUSTERS,
     43            (cId_t *) GenericApp_ClusterListInput,//输入命令，接收到LOCATION_RSSI_BLAST
     44            GENERICAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
     45            (cId_t *)GenericApp_ClusterListOutput,  //  byte *pAppInClusterList;
     46          };
     47          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     48          endPointDesc_t GenericApp_epDesc;
   \                     GenericApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     49          byte GenericApp_TaskID;   // Task ID for internal task/event processing
   \                     GenericApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     50          byte GenericApp_TransID; // This variable will be received when
   \                     GenericApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     51                                    // GenericApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     52          devStates_t GenericApp_NwkState;
   \                     GenericApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     53          
     54          void GenericApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
     55          void GenericApp_SendTheMessage( void );
     56          //void processMSGCmd(afIncomingMSGpacket_t *pckt)

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     57          void GenericApp_Init( byte task_id )
   \                     GenericApp_Init:
     58          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
     59            GenericApp_TaskID = task_id;
   \   000006   90....       MOV     DPTR,#GenericApp_TaskID
   \   000009   F0           MOVX    @DPTR,A
     60            GenericApp_NwkState = DEV_INIT;
   \   00000A   90....       MOV     DPTR,#GenericApp_NwkState
   \   00000D   7401         MOV     A,#0x1
   \   00000F   F0           MOVX    @DPTR,A
     61            GenericApp_TransID = 0;
   \   000010   90....       MOV     DPTR,#GenericApp_TransID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
     62            GenericApp_epDesc.endPoint = GENERICAPP_ENDPOINT;
   \   000015   90....       MOV     DPTR,#GenericApp_epDesc
   \   000018   740A         MOV     A,#0xa
   \   00001A   F0           MOVX    @DPTR,A
     63            GenericApp_epDesc.task_id = &GenericApp_TaskID;
   \   00001B   A3           INC     DPTR
   \   00001C   74..         MOV     A,#GenericApp_TaskID & 0xff
   \   00001E   F0           MOVX    @DPTR,A
   \   00001F   A3           INC     DPTR
   \   000020   74..         MOV     A,#(GenericApp_TaskID >> 8) & 0xff
   \   000022   F0           MOVX    @DPTR,A
     64            GenericApp_epDesc.simpleDesc
     65                      = (SimpleDescriptionFormat_t *)&GenericApp_SimpleDesc;
   \   000023   A3           INC     DPTR
   \   000024   74..         MOV     A,#GenericApp_SimpleDesc & 0xff
   \   000026   F0           MOVX    @DPTR,A
   \   000027   A3           INC     DPTR
   \   000028   74..         MOV     A,#(GenericApp_SimpleDesc >> 8) & 0xff
   \   00002A   F0           MOVX    @DPTR,A
     66            GenericApp_epDesc.latencyReq = noLatencyReqs;
   \   00002B   A3           INC     DPTR
   \   00002C   E4           CLR     A
   \   00002D   F0           MOVX    @DPTR,A
     67            afRegister( &GenericApp_epDesc );
   \   00002E                ; Setup parameters for call to function afRegister
   \   00002E   7A..         MOV     R2,#GenericApp_epDesc & 0xff
   \   000030   7B..         MOV     R3,#(GenericApp_epDesc >> 8) & 0xff
   \   000032   12....       LCALL   ??afRegister?relay
     68          }
   \   000035   7F01         MOV     R7,#0x1
   \   000037   02....       LJMP    ?BANKED_LEAVE_XDATA
     69          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     70          UINT16 GenericApp_ProcessEvent( byte task_id, UINT16 events )
   \                     GenericApp_ProcessEvent:
     71          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
     72            afIncomingMSGPacket_t *MSGpkt;
     73            if ( events & SYS_EVENT_MSG )
   \   000009   EB           MOV     A,R3
   \   00000A   5480         ANL     A,#0x80
   \   00000C   6036         JZ      ??GenericApp_ProcessEvent_0
     74            {
     75              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( GenericApp_TaskID );
   \   00000E                ; Setup parameters for call to function osal_msg_receive
   \   00000E   8017         SJMP    ??GenericApp_ProcessEvent_1
     76              while ( MSGpkt )
     77              {
     78                switch ( MSGpkt->hdr.event )
   \                     ??GenericApp_ProcessEvent_2:
   \   000010   8E82         MOV     DPL,R6
   \   000012   8F83         MOV     DPH,R7
   \   000014   E0           MOVX    A,@DPTR
   \   000015   641A         XRL     A,#0x1a
   \   000017   7007         JNZ     ??GenericApp_ProcessEvent_3
     79                {
     80          
     81          
     82                  case AF_INCOMING_MSG_CMD:
     83                    GenericApp_MessageMSGCB( MSGpkt );
   \   000019                ; Setup parameters for call to function GenericApp_MessageMSGCB
   \   000019   EE           MOV     A,R6
   \   00001A   FA           MOV     R2,A
   \   00001B   EF           MOV     A,R7
   \   00001C   FB           MOV     R3,A
   \   00001D   12....       LCALL   ??GenericApp_MessageMSGCB?relay
     84                    break;
     85                    
     86                  default:
     87                    break;
     88                }
     89          
     90                // Release the memory
     91                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??GenericApp_ProcessEvent_3:
   \   000020                ; Setup parameters for call to function osal_msg_deallocate
   \   000020   EE           MOV     A,R6
   \   000021   FA           MOV     R2,A
   \   000022   EF           MOV     A,R7
   \   000023   FB           MOV     R3,A
   \   000024   12....       LCALL   ??osal_msg_deallocate?relay
     92          
     93                // Next
     94                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( GenericApp_TaskID );
   \   000027                ; Setup parameters for call to function osal_msg_receive
   \                     ??GenericApp_ProcessEvent_1:
   \   000027   90....       MOV     DPTR,#GenericApp_TaskID
   \   00002A   E0           MOVX    A,@DPTR
   \   00002B   F9           MOV     R1,A
   \   00002C   12....       LCALL   ??osal_msg_receive?relay
   \   00002F   8A..         MOV     ?V0 + 2,R2
   \   000031   8B..         MOV     ?V0 + 3,R3
   \   000033   AE..         MOV     R6,?V0 + 2
   \   000035   AF..         MOV     R7,?V0 + 3
     95              }
   \   000037   EE           MOV     A,R6
   \   000038   4F           ORL     A,R7
   \   000039   70D5         JNZ     ??GenericApp_ProcessEvent_2
     96          
     97              // return unprocessed events
     98              return (events ^ SYS_EVENT_MSG);
   \   00003B   AA..         MOV     R2,?V0 + 0
   \   00003D   E5..         MOV     A,?V0 + 1
   \   00003F   6480         XRL     A,#0x80
   \   000041   FB           MOV     R3,A
   \   000042   8004         SJMP    ??GenericApp_ProcessEvent_4
     99            }
    100            
    101            //if( event & SEND_DATA_EVENT )
    102            //{
    103             // GenericApp_SendTheMessage();
    104             // return (events ^ SENT_DATA_EVENT);
    105            //}
    106          
    107            // Discard unknown events
    108            return 0;
   \                     ??GenericApp_ProcessEvent_0:
   \   000044   7A00         MOV     R2,#0x0
   \   000046   7B00         MOV     R3,#0x0
   \                     ??GenericApp_ProcessEvent_4:
   \   000048   7F04         MOV     R7,#0x4
   \   00004A   02....       LJMP    ?BANKED_LEAVE_XDATA
    109          }
    110          
    111          
    112          
    113          /*void processMSGCmd(afIncomingMSGPacket_t *pckt)
    114          {
    115          		switch(pkt->clusterId)
    116          		{
    117          		
    118          		   case LOCATION_RSSI_BLAST:
    119          		   GenericApp_SendTheMessage();
    120          		   break;
    121          		}
    122          
    123          }*/
    124          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    125          void GenericApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     GenericApp_MessageMSGCB:
    126          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    127            unsigned char buffer[10];//
                                 ^
Warning[Pe177]: variable "buffer" was declared but never referenced
    128            switch ( pkt->clusterId )
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   640B         XRL     A,#0xb
   \   00000F   7002         JNZ     ??GenericApp_MessageMSGCB_0
   \   000011   A3           INC     DPTR
   \   000012   E0           MOVX    A,@DPTR
   \                     ??GenericApp_MessageMSGCB_0:
   \   000013   7003         JNZ     ??GenericApp_MessageMSGCB_1
    129            {
    130              case LOCATION_RSSI_BLAST:
    131                
    132                GenericApp_SendTheMessage();
   \   000015                ; Setup parameters for call to function GenericApp_SendTheMessage
   \   000015   12....       LCALL   ??GenericApp_SendTheMessage?relay
    133               break;
    134            }
    135          }
   \                     ??GenericApp_MessageMSGCB_1:
   \   000018   D083         POP     DPH
   \   00001A   D082         POP     DPL
   \   00001C   02....       LJMP    ?BRET
    136          
    137          
    138          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    139          void GenericApp_SendTheMessage( void )
   \                     GenericApp_SendTheMessage:
    140          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 12
   \   000005   74F4         MOV     A,#-0xc
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    141           // POINT_SITE data;
    142            //int r;  //定义一个该终端和小车的距离变量
    143            /*
    144            r=?
    145            */
    146            //data.x=X;
    147            //data.y=Y;
    148           // data.rssi=(-1)*(81-((pkt->LinkQuality)*91)/255);
    149            
    150            afAddrType_t my_DstAddr;
    151            my_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
   \   00000A   7408         MOV     A,#0x8
   \   00000C   12....       LCALL   ?XSTACK_DISP0_8
   \   00000F   7402         MOV     A,#0x2
   \   000011   F0           MOVX    @DPTR,A
    152            my_DstAddr.endPoint = GENERICAPP_ENDPOINT;
   \   000012   7409         MOV     A,#0x9
   \   000014   12....       LCALL   ?XSTACK_DISP0_8
   \   000017   740A         MOV     A,#0xa
   \   000019   F0           MOVX    @DPTR,A
    153            my_DstAddr.addr.shortAddr = 0x0000;
   \   00001A   85..82       MOV     DPL,?XSP + 0
   \   00001D   85..83       MOV     DPH,?XSP + 1
   \   000020   E4           CLR     A
   \   000021   F0           MOVX    @DPTR,A
   \   000022   A3           INC     DPTR
   \   000023   F0           MOVX    @DPTR,A
    154            AF_DataRequest( &my_DstAddr, &GenericApp_epDesc,
    155                                 LOCATION_XY_RSSI_RESPONSE,
    156                                 0,
    157                                 NULL,
    158                                 &GenericApp_TransID,
    159                                 AF_TX_OPTIONS_NONE, 
    160                                 AF_DEFAULT_RADIUS ) ;
   \   000024                ; Setup parameters for call to function AF_DataRequest
   \   000024   75..1E       MOV     ?V0 + 0,#0x1e
   \   000027   78..         MOV     R0,#?V0 + 0
   \   000029   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00002C   75....       MOV     ?V0 + 0,#GenericApp_TransID & 0xff
   \   00002F   75....       MOV     ?V0 + 1,#(GenericApp_TransID >> 8) & 0xff
   \   000032   78..         MOV     R0,#?V0 + 0
   \   000034   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000037   E4           CLR     A
   \   000038   F5..         MOV     ?V0 + 0,A
   \   00003A   F5..         MOV     ?V0 + 1,A
   \   00003C   78..         MOV     R0,#?V0 + 0
   \   00003E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000041   78..         MOV     R0,#?V0 + 0
   \   000043   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000046   75..6F       MOV     ?V0 + 0,#0x6f
   \   000049   78..         MOV     R0,#?V0 + 0
   \   00004B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00004E   7900         MOV     R1,#0x0
   \   000050   7C..         MOV     R4,#GenericApp_epDesc & 0xff
   \   000052   7D..         MOV     R5,#(GenericApp_epDesc >> 8) & 0xff
   \   000054   7409         MOV     A,#0x9
   \   000056   12....       LCALL   ?XSTACK_DISP0_8
   \   000059   AA82         MOV     R2,DPL
   \   00005B   AB83         MOV     R3,DPH
   \   00005D   12....       LCALL   ??AF_DataRequest?relay
   \   000060   7409         MOV     A,#0x9
   \   000062   12....       LCALL   ?DEALLOC_XSTACK8
    161          }
   \   000065   740C         MOV     A,#0xc
   \   000067   12....       LCALL   ?DEALLOC_XSTACK8
   \   00006A   7F02         MOV     R7,#0x2
   \   00006C   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_MessageMSGCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_SendTheMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_SendTheMessage

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     GenericApp_Init                    0      0      9
       -> afRegister                    0      0     18
     GenericApp_MessageMSGCB            2      0     12
       -> GenericApp_SendTheMessage     4      0      0
     GenericApp_ProcessEvent            0      0     12
       -> osal_msg_receive              0      0     24
       -> GenericApp_MessageMSGCB       0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
     GenericApp_SendTheMessage          0      0     31
       -> AF_DataRequest                0      0     62


   Segment part sizes:

     Function/Label                    Bytes
     --------------                    -----
     GenericApp_ClusterListOutput         2
     GenericApp_ClusterListInput          2
     GenericApp_SimpleDesc               12
     GenericApp_epDesc                    6
     GenericApp_TaskID                    1
     GenericApp_TransID                   1
     GenericApp_NwkState                  1
     GenericApp_Init                     58
     GenericApp_ProcessEvent             77
     GenericApp_MessageMSGCB             31
     GenericApp_SendTheMessage          111
     ??GenericApp_Init?relay              6
     ??GenericApp_ProcessEvent?relay      6
     ??GenericApp_MessageMSGCB?relay      6
     ??GenericApp_SendTheMessage?relay    6

 
 277 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
  16 bytes in segment XDATA_ROM_C
   9 bytes in segment XDATA_Z
 
 301 bytes of CODE  memory
  16 bytes of CONST memory
   9 bytes of XDATA memory

Errors: none
Warnings: 1
